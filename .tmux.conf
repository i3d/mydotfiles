
# Ctrl-a c Create new window
# Ctrl-a d Detach current client
# Ctrl-a l Move to previously selected window
# Ctrl-a n Move to the next window
# Ctrl-a p Move to the previous window
# Ctrl-a & Kill the current window
# Ctrl-a , Rename the current window
# Ctrl-a % Split the current window into two panes
# Ctrl-a q Show pane numbers (used to switch between panes)
# Ctrl-a o Switch to the next pane
# Ctrl-a ? List all keybindings
# Ctrl-a w (List all windows / window numbers)
# Ctrl-a <window number>
#  (Move to the specified window number, the default bindings are from 0 - 9)
# Ctrl-a f find window.
# Ctrl-a : tmux commands.
# Ctrl-a % (Split the window vertically)
# Ctrl-a : "split-window" (Split window horizontally)
# Ctrl-a o (Goto next pane)
# Ctrl-a q (Show pane numbers, when the numbers show up type the key to goto that pane)
# Ctrl-a { (Move the current pane left)
# Ctrl-a } (Move the current pane right)
unbind-key %
# bind-key | split-window -h
# bind-key - split-window -v
bind-key C-a last-window
# with a send C-a, we can nest tmux but using C-a .. a + key to nagivate the inner session.
bind-key a send-key C-a
# Ctrl-a : "break-pane"
# Ctrl-a : resize-pane (By default it resizes the current pane down)
# Ctrl-a : resize-pane -U (Resizes the current pane upward)
# Ctrl-a : resize-pane -L (Resizes the current pane left)
# Ctrl-a : resize-pane -R (Resizes the current pane right)
# Ctrl-a : resize-pane 20 (Resizes the current pane down by 20 cells)
# Ctrl-a : resize-pane -U 20 (Resizes the current pane upward by 20 cells)
# Ctrl-a : resize-pane -L 20 (Resizes the current pane left by 20 cells)
# Ctrl-a : resize-pane -R 20 (Resizes the current pane right by 20 cells)
# Ctrl-a : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells)
# Ctrl-a : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)
# http://blog.hawkhost.com/2010/06/28/tmux-the-terminal-multiplexer/
set -g prefix C-a
set-option -g status on
set-option -g status-keys vi
# scrollback history
set-option history-limit 10000000
set-option status-utf8 on
set-window-option -g clock-mode-style 24
set-window-option -g mode-keys vi
set-window-option -g utf8 on

# Set status bar
set -g status-bg black
# not sure why
#set -g status-fg white

# Original
# set -g status-left '#[fg=green]#H'
## left
set -g status-left-fg white
set -g status-left-bg blue
set -g status-left '#H:#S'
# Set right status.
set -g status-right '#[fg=yellow]#(uptime | cut -d "," -f 2-)'

## rigt
set -g status-right-fg white
set -g status-right-bg blue
set -g status-right '%a %b %d, %Y %H:%M'
## window options
# color
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg blue

# Highlight active window
set-window-option -g window-status-current-bg red

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on


# use "v" and "s" to do vertical/horizontal splits, like vim
bind-key s split-window -v
bind-key v split-window -h
#
# use the vim motion keys to move between panes
#smart pane switching with awareness of vim splits
# smart pane switching with awareness of vim splits
# bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
# bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
# bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
# bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\'') || tmux select-pane -l"
#
## spaw panes.
bind-key j select-pane -L
bind-key k select-pane -R
bind-key h select-pane -U
bind-key l select-pane -D

## rotate panes in window
bind-key y rotate-window -U
bind-key u rotate-window -D

# make using mouse to select the pane
# when using this from mac to a Linux terminal, the mouse becomes a + sign and
# can't do select copy&paste anymore.
set -g mouse-select-pane off

# use vim motion keys while in copy mode
setw -g mode-keys vi
# use the vim resize keys.
# the number at the end is how much the pane will be resized,
# and 1 is fairly small -- you might want to tweak this.
bind-key - resize-pane -D 5
bind-key + resize-pane -U 5
bind-key < resize-pane -L 5
bind-key > resize-pane -R 5

### split and ssh to another machine.
# tmux split-window -v "exec /ms/dist/aurora/bin/ssh -q $server2"

# reload
bind-key R source-file ~/.tmux.conf

# display panes
# set -g display-panes
set -g display-panes-time 2000

# set titles
set -g set-titles on
set -g set-titles-string "tmux:#I #W"
# Automatically set window title
# setw -g automatic-rename on

# set mode-mouse off so mouse selection in copy mode works.
setw -g mode-mouse off

# Make sure tmux has the full ansi color support.
# set -g default-terminal "screen-256color-bce"

# plugin manager, at the end of the file.
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

#--------------- color schema --------------------#
set -g @plugin "arcticicestudio/nord-tmux"


#--------------- configs for the plugin--------------------#
set -g @continuum-boot 'on'
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'iterm'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-255color:Tc"


# screensaver...
set -g lock-after-time 600
set -g lock-command "cmatrix -Bs -C cyan -u10"

#gitmux integration.
set -g status-right '#(gitmux "#{pane_current_path}")'


# spaceduck theme
# Basic color support setting
# set-option -g default-terminal "screen-256color"

# Default bar color
set-option -g status-style bg='#1b1c36',fg='#ecf0c1'

# Active Pane
set -g pane-active-border-style "fg=#5ccc96"

# Inactive Pane
set -g pane-border-style "fg=#686f9a"

# Active window
set-option -g window-status-current-style bg='#686f9a',fg='#ffffff'

# Message
set-option -g message-style bg='#687f9a',fg='#ecf0c1'
set-option -g message-command-style bg='#686f9a',fg='#ecf0c1'

# When Commands are run
set -g message-style "fg=#0f111b,bg=#686f9a"


# at last
set -g default-terminal "xterm-256color-italic"
set -as terminal-overrides ',xterm*:sitm=\E[3m'
